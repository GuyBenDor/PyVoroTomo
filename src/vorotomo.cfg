[algorithm]
# Number of iterations to perform.
niter    = 2   
# Number of random realizations per iteration.
nreal    = 2
# Number of Voronoi cells per realization.
nvoronoi = 8
# Number of arrivals per realization.
narrival = 16
# Multiplicative factor for outlier removal using Tukey fences
# Values 1.5 and 3 indicate "outliers" and "far-off values", respectively.
outlier_removal_factor = 1.5
# The following parameters (atol, btol, maxiter, conlim, and damp) are
# passed through directly to scipy.sparse.linalg.lsmr().
atol = 1e-3
btol = 1e-4
maxiter = 100
conlim = 50
damp = 1.0

[workspace]
traveltime_dir = /home/malcolmw/src/PyVoroTomo/test_data/traveltimes

[model]
# Minimum latitude.
lat_min            = 34.5  
# Minimum longitude.
lon_min            = -119.0
# Minimum depth.
depth_min          = -5.0  
# Number of nodes along latitudinal axis.
nlat               = 251   
# Number of nodes along longitudinal axis.
nlon               = 301   
# Number of nodes along depth axis.
ndepth             = 36    
# Node interval along latitudinal axis.
dlat               = 0.01  
# Node interval along longitudinal axis.
dlon               = 0.01  
# Node interval along depth axis.
ddepth             = 1     
# Path to initial P-wave velocity model.
# This should be an NPZ file with a model stored in the 'velocity'
# attribute. Model should be an (nlat x nlon x ndepth)-shaped
# ndarray, the index (0, 0, 0) corresponding to the node with
# coorindates (lat_min, lon_min, depth_min).
initial_pwave_path = /home/malcolmw/src/PyVoroTomo/test_data/initial_pwave_model.npz  
# Path to initial S-wave velocity model.
# This should be an NPZ file with a model stored in the 'velocity'
# attribute. Model should be an (nlat x nlon x ndepth)-shaped
# ndarray, the index (0, 0, 0) corresponding to the node with
# coorindates (lat_min, lon_min, depth_min).
initial_swave_path = /home/malcolmw/src/PyVoroTomo/test_data/initial_swave_model.npz  

[locate]
dlat = 0.1
dlon = 0.1
ddepth = 10
dtime = 5
